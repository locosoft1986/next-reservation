// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String?
  lastName       String?
  email          String?       @unique
  emailVerified  DateTime?
  image          String?
  mobile         String?
  hashedPassword String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  isAdmin        Boolean       @default(false)
  accounts       Account[]
  reservations   Reservation[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Table {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  capacity  Int

  reservations Reservation[]
}

model Reservation {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @db.ObjectId
  tableId         String   @db.ObjectId
  firstName       String?
  lastName        String?
  mobile          String?
  people          Int
  reservationDate DateTime
  createdAt       DateTime @default(now())

  isCompleted Boolean @default(false)

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
}
